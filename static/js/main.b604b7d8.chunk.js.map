{"version":3,"sources":["features/header/Header.tsx","features/codespace/CodeMirrorUtils.ts","features/codespace/CodeSpace.tsx","features/codespace/CodeBlock.tsx","utils/githubFetch.ts","features/codespace/codeSpaceSlice.ts","features/codespace/DocSpace.tsx","features/preview/previewSlice.ts","features/preview/PaymentResult.tsx","features/preview/Preview.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx","res/docs-icon.svg","res/support-icon.svg","res/adyen-logo.svg"],"names":["Header","className","href","src","logo","alt","docsIcon","supportIcon","findCMMode","fileName","parts","split","length","cmOptions","lineNumbers","theme","CodeSpace","sourceFiles","useSelector","state","codeSpace","useState","source","setSource","editorRef","useRef","useEffect","Nav","variant","activeKey","name","map","file","Item","key","Link","eventKey","onClick","ref","value","content","options","mode","CodeBlock","language","style","vs","BASE_URL","fetchFromGitHub","path","a","URL","fetch","res","status","Error","statusText","SOURCE_DEF","initialState","platforms","error","selected","isAllSet","markdown","codeSpaceSlice","createSlice","reducers","setOptions","action","payload","setError","setSelected","setMarkdown","actions","getSelected","getOptions","getRepoFilePath","sel","platform","server","client","getDefaultSelected","pl","servers","clients","DocSpace","dispatch","useDispatch","getState","json","console","message","text","md","indexRes","index","Promise","all","Dropdown","Toggle","id","label","Menu","pt","calculateSelected","sv","cl","renderers","code","prevSelected","tmpSelected","undefined","componentType","paymentMethodsRes","paymentRes","paymentDetailsRes","paymentResult","config","clientKey","environment","paymentMethodsConfiguration","ideal","showImage","card","hasHolderName","holderNameRequired","amount","currency","locale","showPayButton","previewSlice","paymentMethods","filter","it","includes","type","payments","paymentDetails","err","SERVER_URL","PaymentResult","getAlertParams","msg","Alert","onClose","dismissible","Preview","ConnectedCheckoutContainer","CheckoutContainer","paymentContainer","React","createRef","paymentComponent","checkout","processPaymentResponse","handleAction","props","setPaymentResult","resultCode","onSubmit","component","isValid","findCurrency","data","paymentMethod","orderRef","uuidv4","initiatePayment","channel","additionalData","allow3DS2","reference","returnUrl","origin","window","location","onAdditionalDetails","submitAdditionalDetails","this","getPaymentMethods","prevProps","preview","paymentMethodsResponse","AdyenCheckout","create","mount","current","Component","mapDispatchToProps","method","headers","response","body","JSON","stringify","connect","App","direction","sizes","minSize","gutterSize","store","configureStore","reducer","coeSpaceReducer","previewReducer","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.b604b7d8.chunk.js","sourcesContent":["import React from \"react\";\nimport docsIcon from \"../../res/docs-icon.svg\";\nimport supportIcon from \"../../res/support-icon.svg\";\nimport logo from \"../../res/adyen-logo.svg\";\nimport \"./Header.scss\";\n\nfunction Header() {\n  return (\n    <header className=\"app-header d-flex justify-content-between\">\n      <a href=\"./\" className=\"logo\">\n        <img src={logo} alt=\"Adyen logo\" />\n        <span className=\"logo-text\">Integration Guides</span>\n      </a>\n      <ul className=\"nav\">\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href=\"https://docs.adyen.com/\">\n            <img src={docsIcon} alt=\"documentation\" />\n            <span className=\"link-text\">Documentation</span>\n            <span className=\"sr-only\">Opens in a new tab or window</span>\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href=\"https://support.adyen.com/hc/en-us\">\n            <img src={supportIcon} alt=\"support\" />\n            <span className=\"link-text\">Support</span>\n            <span className=\"sr-only\">Opens in a new tab window</span>\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href=\"https://github.com/adyen-examples\">\n            <img src={docsIcon} alt=\"examples\" />\n            <span className=\"link-text\">Examples</span>\n            <span className=\"sr-only\">Opens in a new tab window</span>\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a className=\"nav-link btn\" href=\"https://www.adyen.com/signup\">\n            <span className=\"link-text\">Sign up</span>\n            <span className=\"sr-only\">Opens in a new tab or window</span>\n          </a>\n        </li>\n      </ul>\n    </header>\n  );\n}\n\nexport default Header;\n","// import CodeMirror from \"codemirror\";\n\n/* Scroll to given line, use this if selection attribute is not enough*/\n// CodeMirror.defineExtension(\"centerOnLine\", function (line: number) {\n//   //@ts-ignore\n//   var h = this.getScrollInfo().clientHeight;\n//   //@ts-ignore\n//   var coords = this.charCoords({ line: line, ch: 0 }, \"local\");\n//   //@ts-ignore\n//   this.scrollTo(null, (coords.top + coords.bottom - h) / 2);\n// });\n\nexport function findCMMode(fileName: string | undefined): string {\n  if (!fileName) return \"\";\n  const parts = fileName.split(\".\");\n  const ext = parts.length > 0 ? parts[parts.length - 1] : \"\";\n  switch (ext) {\n    case \"html\":\n      return \"text/html\";\n    case \"css\":\n      return \"text/css\";\n    case \"js\":\n      return \"text/javascript\";\n    case \"ts\":\n      return \"text/typescript\";\n    case \"jsx\":\n      return \"text/jsx\";\n    case \"tsx\":\n      return \"text/typescript-jsx\";\n    case \"vue\":\n      return \"text/x-vue\";\n    case \"java\":\n      return \"text/x-java\";\n    case \"kt\":\n      return \"text/x-kotlin\";\n    case \"cs\":\n      return \"text/x-csharp\";\n    case \"cshtml\":\n      return \"text/x-aspx\";\n    case \"go\":\n      return \"text/x-go\";\n    case \"php\":\n      return \"text/x-php\";\n    case \"py\":\n      return \"text/x-python\";\n    case \"rb\":\n      return \"text/x-ruby\";\n    case \"swift\":\n      return \"text/x-swift\";\n    default:\n      return \"\";\n  }\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Nav from \"react-bootstrap/Nav\";\n// codemirror dependencies and modes\nimport { UnControlled as CodeMirror } from \"react-codemirror2\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/solarized.css\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/mode/css/css\";\nimport \"codemirror/mode/xml/xml\";\nimport \"codemirror/mode/htmlmixed/htmlmixed\";\nimport \"codemirror/mode/htmlembedded/htmlembedded\";\nimport \"codemirror/mode/handlebars/handlebars\";\nimport \"codemirror/mode/jsx/jsx\";\nimport \"codemirror/mode/vue/vue\";\nimport \"codemirror/mode/php/php\";\nimport \"codemirror/mode/go/go\";\nimport \"codemirror/mode/clike/clike\";\nimport \"codemirror/mode/python/python\";\nimport \"codemirror/mode/ruby/ruby\";\nimport \"codemirror/mode/swift/swift\";\n\nimport \"./CodeSpace.scss\";\nimport { RootState } from \"../../app/store\";\nimport { SourceFile } from \"./codeSpaceSlice\";\nimport { findCMMode } from \"./CodeMirrorUtils\";\n\nconst cmOptions = {\n  lineNumbers: true,\n  theme: `solarized dark`,\n};\n\nfunction CodeSpace() {\n  const sourceFiles = useSelector((state: RootState) => state.codeSpace.sourceFiles);\n  const [source, setSource] = useState<SourceFile>();\n  const editorRef = useRef<CodeMirror>(null);\n\n  useEffect(() => {\n    if (sourceFiles && sourceFiles[0]) {\n      setSource(sourceFiles[0]);\n    }\n  }, [sourceFiles, setSource]);\n\n  return (\n    <div className=\"code-space\">\n      <div className=\"code-header-tabs\">\n        <Nav variant=\"tabs\" activeKey={source?.name}>\n          {sourceFiles.map((file) => (\n            <Nav.Item key={file.name}>\n              <Nav.Link eventKey={file.name} onClick={() => setSource(file)}>\n                {file.name}\n              </Nav.Link>\n            </Nav.Item>\n          ))}\n        </Nav>\n      </div>\n      <CodeMirror\n        ref={editorRef}\n        className=\"code-mirror-editor\"\n        value={source?.content}\n        // onChange={this.editorOnChange}\n        options={{\n          ...cmOptions,\n          mode: findCMMode(source?.name),\n        }}\n        // selection={{\n        //   ranges: [\n        //     {\n        //       anchor: { ch: 1, line: 40 },\n        //       head: { ch: 1, line: 43 },\n        //     },\n        //   ],\n        //   focus: true, // defaults false if not specified\n        // }}\n      />\n    </div>\n  );\n}\n\nexport default CodeSpace;\n","import React from \"react\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { vs } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\nfunction CodeBlock({ value = \"\", language = null }) {\n  return (\n    <SyntaxHighlighter language={language} style={vs}>\n      {value}\n    </SyntaxHighlighter>\n  );\n}\n\nexport default CodeBlock;\n","const BASE_URL = \"raw.githubusercontent.com\";\nconst DEFAULT_REPO = \"adyen-examples/integration-guides\";\nconst DEFAULT_BRANCH = \"master\";\nconst PROTOCOL = \"https\";\n\nexport async function fetchFromGitHub(path: string): Promise<Response> {\n  const URL = `${PROTOCOL}://${BASE_URL}/${DEFAULT_REPO}/${DEFAULT_BRANCH}/${path}`;\n  try {\n    const res = await fetch(URL);\n    if (res.status !== 200) {\n      throw new Error(`${res.status}: ${res.statusText}`);\n    }\n    return res;\n  } catch (e) {\n    throw e;\n  }\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { AppThunk, RootState } from \"../../app/store\";\nimport { fetchFromGitHub } from \"../../utils/githubFetch\";\n\nexport interface Client {\n  name: string;\n  label: string;\n}\nexport interface Server {\n  name: string;\n  label: string;\n  clients?: Client[];\n}\nexport interface Platform {\n  name: string;\n  label: string;\n  servers?: Server[];\n}\nexport interface SourceFile {\n  name: string;\n  content: string;\n}\nexport interface CodeSpaceState {\n  error: string;\n  options: {\n    platforms: Platform[];\n  };\n  selected: {\n    platform?: Platform;\n    server?: Server;\n    client?: Client;\n    isAllSet?: boolean;\n  };\n  markdown: string;\n  sourceFiles: SourceFile[];\n}\nconst MARKDOWN_DEF = \"## Selection not found\";\nconst SOURCE_DEF = {\n  name: \"index\",\n  content: \"\",\n};\nconst initialState: CodeSpaceState = {\n  options: { platforms: [] },\n  error: \"\",\n  selected: {\n    isAllSet: false,\n  },\n  markdown: MARKDOWN_DEF,\n  sourceFiles: [SOURCE_DEF],\n};\n\nexport type OptionFromGH = typeof initialState.options;\nexport type SelectedOptions = typeof initialState.selected;\n\nexport const codeSpaceSlice = createSlice({\n  name: \"codeSpace\",\n  initialState,\n  reducers: {\n    setOptions: (state, action: PayloadAction<OptionFromGH>) => {\n      state.options = action.payload;\n    },\n    setError: (state, action: PayloadAction<string>) => {\n      state.error = action.payload;\n    },\n    setSelected: (state, action: PayloadAction<SelectedOptions>) => {\n      state.selected = action.payload;\n    },\n    setMarkdown: (state, action: PayloadAction<string>) => {\n      state.markdown = action.payload;\n    },\n    setSource: (state, action: PayloadAction<SourceFile[]>) => {\n      state.sourceFiles = action.payload;\n    },\n  },\n});\n\nexport const { setOptions, setError, setSelected, setMarkdown, setSource } = codeSpaceSlice.actions;\n\nexport const getOptionsFile = (): AppThunk => async (dispatch, getState) => {\n  try {\n    const res = await fetchFromGitHub(\"index.json\");\n    const json = await res.json();\n    dispatch(setOptions(json));\n    dispatch(setSelected(getDefaultSelected(getState().codeSpace.options.platforms[0])));\n  } catch (error) {\n    console.error(error);\n    dispatch(setError(error.message || error));\n  }\n};\n\nexport const getSourceFiles = (): AppThunk => async (dispatch, getState) => {\n  const { selected } = getState().codeSpace;\n  const [path, ok] = getRepoFilePath(selected);\n  if (ok) {\n    try {\n      const res = await fetchFromGitHub(`${path}/README.md`);\n      const md = await res.text();\n      dispatch(setMarkdown(md));\n      const indexRes = await fetchFromGitHub(`${path}/index.json`);\n      const index = await indexRes.json();\n\n      // using promise.all to fetch these in parallel\n      const sourceFiles: SourceFile[] = await Promise.all(\n        index.map(async (name: string) => {\n          const res = await fetchFromGitHub(`${path}/${name}`);\n          const content = await res.text();\n          return {\n            name,\n            content,\n          };\n        })\n      );\n      dispatch(setSource(sourceFiles));\n    } catch (error) {\n      console.error(error);\n      dispatch(setError(error.message || error));\n      dispatch(setMarkdown(MARKDOWN_DEF));\n      dispatch(setSource([SOURCE_DEF]));\n    }\n  } else {\n    dispatch(setMarkdown(MARKDOWN_DEF));\n    dispatch(setSource([SOURCE_DEF]));\n  }\n};\n\nexport const getSelected = (state: RootState) => state.codeSpace.selected;\nexport const getOptions = (state: RootState) => state.codeSpace.options;\n\nexport default codeSpaceSlice.reducer;\n\nfunction getRepoFilePath(sel: SelectedOptions): [string, boolean] {\n  return [`${sel.platform?.name}-${sel.server?.name}-${sel.client?.name}`, sel.isAllSet || false];\n}\n\nfunction getDefaultSelected(pl: Platform): SelectedOptions {\n  return {\n    platform: pl,\n    server: pl?.servers?.[0],\n    client: pl?.servers?.[0].clients?.[0],\n    isAllSet: true,\n  };\n}\n","import React, { useEffect } from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport ReactMarkdown from \"react-markdown\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../../app/store\";\n\nimport CodeBlock from \"./CodeBlock\";\nimport { setSelected, getSelected, getOptions, SelectedOptions, getSourceFiles, getOptionsFile } from \"./codeSpaceSlice\";\nimport \"./DocSpace.scss\";\n\nfunction DocSpace() {\n  const dispatch = useDispatch();\n  const selected = useSelector(getSelected);\n  const markdown = useSelector((state: RootState) => state.codeSpace.markdown);\n  const { platforms } = useSelector(getOptions);\n\n  useEffect(() => {\n    dispatch(getOptionsFile());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getSourceFiles());\n  }, [selected, dispatch]);\n\n  return (\n    <div className=\"doc-space container-fluid\">\n      <div className=\"row code-selector\">\n        <div className=\"col d-flex justify-content-start flex-column flex-md-row\">\n          <Dropdown className=\"mr-4\">\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-platform\">\n              Platform: {selected.platform?.label}\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              {platforms.map((pt) => (\n                <Dropdown.Item key={pt.name} onClick={() => dispatch(setSelected(calculateSelected(selected, { platform: pt })))}>\n                  {pt.label}\n                </Dropdown.Item>\n              ))}\n            </Dropdown.Menu>\n          </Dropdown>\n          <Dropdown className=\"mr-4\">\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-platform\">\n              Server: {selected.server?.label}\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              {selected.platform && selected.platform.servers\n                ? selected.platform?.servers.map((sv) => (\n                    <Dropdown.Item key={sv.name} onClick={() => dispatch(setSelected(calculateSelected(selected, { server: sv })))}>\n                      {sv.label}\n                    </Dropdown.Item>\n                  ))\n                : null}\n            </Dropdown.Menu>\n          </Dropdown>\n          <Dropdown>\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-platform\">\n              Client: {selected.client?.label}\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              {selected.server && selected.server.clients\n                ? selected.server?.clients.map((cl) => (\n                    <Dropdown.Item key={cl.name} onClick={() => dispatch(setSelected(calculateSelected(selected, { client: cl })))}>\n                      {cl.label}\n                    </Dropdown.Item>\n                  ))\n                : null}\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"mt-4\">\n            {selected.isAllSet ? (\n              <ReactMarkdown\n                source={markdown}\n                renderers={{\n                  code: CodeBlock,\n                }}\n              />\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DocSpace;\n\nfunction calculateSelected(prevSelected: SelectedOptions, selected: SelectedOptions): SelectedOptions {\n  const tmpSelected = {\n    ...prevSelected, // to avoid mutation\n  };\n  if (selected.platform && (!tmpSelected.platform || tmpSelected.platform.name !== selected.platform.name)) {\n    tmpSelected.platform = selected.platform;\n    tmpSelected.server = undefined;\n    tmpSelected.client = undefined;\n  }\n  if (selected.server && (!tmpSelected.server || tmpSelected.server.name !== selected.server.name)) {\n    tmpSelected.server = selected.server;\n    tmpSelected.client = undefined;\n  }\n  if (selected.client) {\n    tmpSelected.client = selected.client;\n  }\n  tmpSelected.isAllSet = tmpSelected.platform?.name && tmpSelected.server?.name && tmpSelected.client?.name ? true : false;\n  return tmpSelected;\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { PaymentMethodsResponseObject } from \"@adyen/adyen-web/dist/types/core/ProcessResponse/PaymentMethodsResponse/types\";\nimport { Locales } from \"@adyen/adyen-web/dist/types/language/types\";\nimport { AppThunk } from \"../../app/store\";\n\nconst DEFAULT_COMPONENT = \"dropin\";\n\nconst initialState = {\n  componentType: DEFAULT_COMPONENT,\n  error: \"\",\n  paymentMethodsRes: (null as unknown) as PaymentMethodsResponseObject,\n  paymentRes: null,\n  paymentDetailsRes: null,\n  paymentResult: \"\",\n  config: {\n    clientKey: \"test_S5LWLBCRBNBERHGKQMFVNOPJEIYCKQY5\",\n    environment: \"test\",\n    paymentMethodsConfiguration: {\n      ideal: {\n        showImage: true,\n      },\n      card: {\n        hasHolderName: true,\n        holderNameRequired: true,\n        name: \"Credit or debit card\",\n        amount: {\n          value: 1000, // 10€ in minor units\n          currency: \"EUR\",\n        },\n      },\n    },\n    locale: \"en-EN\" as Locales,\n    showPayButton: true,\n  },\n};\n\ntype PreviewState = typeof initialState;\n\nexport const previewSlice = createSlice({\n  name: \"preview\",\n  initialState,\n  reducers: {\n    paymentMethods: (state, action: PayloadAction<[any, number]>) => {\n      const [res, status] = action.payload;\n      if (status >= 300) {\n        state.error = res;\n      } else {\n        res.paymentMethods = res.paymentMethods.filter((it: { type: string }) =>\n          [\n            //TODO adjust the filter\n            \"scheme\",\n            \"bcmc\",\n            \"eps\",\n            \"dotpay\",\n            \"giropay\",\n            \"ideal\",\n            \"directEbanking\",\n            \"paysafecard\",\n          ].includes(it.type)\n        );\n        state.paymentMethodsRes = res;\n      }\n    },\n    payments: (state, action: PayloadAction<[any, number]>) => {\n      const [res, status] = action.payload;\n      if (status >= 300) {\n        state.error = res;\n      } else {\n        state.paymentRes = res;\n      }\n    },\n    paymentDetails: (state, action: PayloadAction<[any, number]>) => {\n      const [res, status] = action.payload;\n      if (status >= 300) {\n        state.error = res;\n      } else {\n        state.paymentDetailsRes = res;\n      }\n    },\n    paymentResult: (state, action: PayloadAction<[string, string]>) => {\n      const [res, err] = action.payload;\n      state.paymentResult = res;\n      state.error = err;\n    },\n  },\n});\n\nexport const { paymentMethods, payments, paymentDetails, paymentResult } = previewSlice.actions;\n\n// let SERVER_URL = \"https://docs.adyen.com/api-explorer/api/checkout/v64\";\nlet SERVER_URL = \"http://localhost:8080/api\"; // TODO\n\nif (process.env.NODE_ENV !== \"production\") {\n  SERVER_URL = \"http://localhost:8080/api\";\n}\n\nexport const getPaymentMethods = (): AppThunk<any> => async (dispatch) => {\n  const response = await fetch(`${SERVER_URL}/paymentMethods`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      //   origin: \"docs.adyen.com\",\n    },\n  });\n  dispatch(paymentMethods([await response.json(), response.status]));\n};\n\nexport const initiatePayment = (data: any): AppThunk<any> => async (dispatch) => {\n  const response = await fetch(`${SERVER_URL}/payments`, {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  dispatch(payments([await response.json(), response.status]));\n};\n\nexport const submitAdditionalDetails = (data: any): AppThunk<any> => async (dispatch) => {\n  const response = await fetch(`${SERVER_URL}/payments/details`, {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  dispatch(paymentDetails([await response.json(), response.status]));\n};\n\nexport const setPaymentResult = (res: string, err = \"\"): AppThunk<any> => (dispatch) => {\n  dispatch(paymentResult([res, err]));\n};\n\nexport default previewSlice.reducer;\n","import React from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { useDispatch } from \"react-redux\";\nimport { paymentResult } from \"./previewSlice\";\n\nfunction getAlertParams(type: string, err: string) {\n  switch (type) {\n    case \"Authorised\":\n      return [\"success\", \"Payment completed successfully\"];\n    case \"Pending\":\n      return [\"warning\", \"Payment pending\"];\n    case \"Refused\":\n      return [\"danger\", \"Payment refused\"];\n    default:\n      return [\"danger\", `payment failed: ${err}`];\n  }\n}\n\nfunction PaymentResult({ type, error }: { type: string; error: string }) {\n  const dispatch = useDispatch();\n  const [className, msg] = getAlertParams(type, error);\n  return type ? (\n    <div className=\"payment-res\">\n      <Alert variant={className} onClose={() => dispatch(paymentResult([\"\", \"\"]))} dismissible>\n        {msg}\n      </Alert>\n    </div>\n  ) : null;\n}\n\nexport default PaymentResult;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport AdyenCheckout from \"@adyen/adyen-web\";\nimport \"@adyen/adyen-web/dist/adyen.css\";\n\nimport { getPaymentMethods, initiatePayment, submitAdditionalDetails, setPaymentResult } from \"./previewSlice\";\n\nimport \"./Preview.scss\";\nimport { RootState } from \"../../app/store\";\nimport PaymentResult from \"./PaymentResult\";\n\nfunction Preview() {\n  return (\n    <footer>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <h5 className=\"h5 text-center heading\">Preview</h5>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"preview-space\">\n              <ConnectedCheckoutContainer />\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n\nexport default Preview;\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\nexport interface ICheckoutContainerProp extends StateProps, DispatchProps {}\n\nclass CheckoutContainer extends React.Component<ICheckoutContainerProp> {\n  private paymentContainer = React.createRef<any>();\n  private paymentComponent: any;\n  private checkout: any;\n\n  componentDidMount() {\n    this.props.getPaymentMethods();\n  }\n\n  componentDidUpdate(prevProps: ICheckoutContainerProp) {\n    const { paymentMethodsRes: paymentMethodsResponse, config, paymentRes, paymentDetailsRes, error } = this.props.preview;\n    if (error && error !== prevProps.preview.error) {\n      this.props.setPaymentResult(\"Error\", error);\n      return;\n    }\n    if (\n      paymentMethodsResponse &&\n      config &&\n      (paymentMethodsResponse !== prevProps.preview.paymentMethodsRes || config !== prevProps.preview.config)\n    ) {\n      this.checkout = new AdyenCheckout({\n        ...config,\n        paymentMethodsResponse,\n        onAdditionalDetails: this.onAdditionalDetails,\n        onSubmit: this.onSubmit,\n      });\n\n      if (this.checkout) {\n        this.checkout.create(this.props.preview.componentType).mount(this.paymentContainer.current);\n      }\n    }\n    if (paymentRes && paymentRes !== prevProps.preview.paymentRes) {\n      this.processPaymentResponse(paymentRes);\n    }\n    if (paymentRes && paymentDetailsRes !== prevProps.preview.paymentDetailsRes) {\n      this.processPaymentResponse(paymentDetailsRes);\n    }\n  }\n\n  processPaymentResponse = (paymentRes: any) => {\n    if (paymentRes.action) {\n      this.paymentComponent.handleAction(paymentRes.action);\n    } else {\n      this.props.setPaymentResult(paymentRes.resultCode);\n    }\n  };\n\n  onSubmit = (state: any, component: any) => {\n    if (state.isValid) {\n      const currency = findCurrency(state.data.paymentMethod.type);\n      const orderRef = uuidv4();\n      this.props.initiatePayment({\n        amount: { currency, value: 1000 }, // value is 10€ in minor units\n        channel: \"Web\",\n        additionalData: {\n          allow3DS2: true,\n        },\n        reference: orderRef,\n\n        returnUrl: `http://localhost:8080/api/handleShopperRedirect?orderRef=${orderRef}`,\n        origin: window.location.origin,\n        ...state.data,\n      });\n      this.paymentComponent = component;\n    }\n  };\n\n  onAdditionalDetails = (state: any, component: any) => {\n    this.props.submitAdditionalDetails(state.data);\n    this.paymentComponent = component;\n  };\n\n  render() {\n    return (\n      <div className=\"payment-container\">\n        <PaymentResult type={this.props.preview.paymentResult} error={this.props.preview.error} />\n        <div ref={this.paymentContainer} className=\"payment\"></div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ preview }: RootState) => ({\n  preview,\n});\n\nconst mapDispatchToProps = {\n  getPaymentMethods,\n  initiatePayment,\n  submitAdditionalDetails,\n  setPaymentResult,\n};\n\nexport const ConnectedCheckoutContainer = connect(mapStateToProps, mapDispatchToProps)(CheckoutContainer);\n\nfunction findCurrency(type: string) {\n  switch (type) {\n    case \"wechatpayqr\":\n    case \"alipay\":\n      return \"CNY\";\n    case \"dotpay\":\n      return \"PLN\";\n    case \"boletobancario\":\n      return \"BRL\";\n    default:\n      return \"EUR\";\n  }\n}\n","import React from \"react\";\r\nimport Split from \"react-split\";\r\n\r\nimport \"./App.scss\";\r\nimport Header from \"./features/header/Header\";\r\nimport CodeSpace from \"./features/codespace/CodeSpace\";\r\nimport DocSpace from \"./features/codespace/DocSpace\";\r\nimport Preview from \"./features/preview/Preview\";\r\n\r\nconst GUTTER_SIZE = 10;\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <Split\r\n        className=\"main-split-container d-flex flex-column\"\r\n        direction=\"vertical\"\r\n        sizes={[75, 25]}\r\n        minSize={[200, 50]}\r\n        gutterSize={GUTTER_SIZE}\r\n      >\r\n        <div className=\"app-body\">\r\n          <Split\r\n            className=\"inner-split-container d-flex\"\r\n            direction=\"horizontal\"\r\n            sizes={[50, 50]}\r\n            minSize={[200, 300]}\r\n            gutterSize={GUTTER_SIZE}\r\n          >\r\n            <DocSpace />\r\n            <CodeSpace />\r\n          </Split>\r\n        </div>\r\n        <Preview />\r\n      </Split>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\nimport coeSpaceReducer from \"../features/codespace/codeSpaceSlice\";\nimport previewReducer from \"../features/preview/previewSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    codeSpace: coeSpaceReducer,\n    preview: previewReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, Action<string>>;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/docs-icon.f0254ce2.svg\";","module.exports = __webpack_public_path__ + \"static/media/support-icon.c463d965.svg\";","module.exports = __webpack_public_path__ + \"static/media/adyen-logo.19857533.svg\";"],"sourceRoot":""}